{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\newrepositary\\\\project1\\\\team23\\\\reactjs\\\\30dropdown\\\\new\\\\src\\\\all projects\\\\QuizApp.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"Which is the largest animal in the world?\",\n  answers: [{\n    text: \"Shark\",\n    correct: false\n  }, {\n    text: \"Blue whale\",\n    correct: true\n  }, {\n    text: \"Elephant\",\n    correct: false\n  }, {\n    text: \"Giraffe\",\n    correct: false\n  }]\n}, {\n  question: \"Which is the smallest country in the world?\",\n  answers: [{\n    text: \"Vatican City\",\n    correct: true\n  }, {\n    text: \"Bhutan\",\n    correct: false\n  }, {\n    text: \"Nepal\",\n    correct: false\n  }, {\n    text: \"Sri Lanka\",\n    correct: false\n  }]\n}, {\n  question: \"Which is the largest desert in the world?\",\n  answers: [{\n    text: \"Kalahari\",\n    correct: false\n  }, {\n    text: \"Gobi\",\n    correct: false\n  }, {\n    text: \"Sahara\",\n    correct: false\n  }, {\n    text: \"Antarctica\",\n    correct: true\n  }]\n}, {\n  question: \"Which is the smallest continent in the world?\",\n  answers: [{\n    text: \"Asia\",\n    correct: false\n  }, {\n    text: \"Australia\",\n    correct: true\n  }, {\n    text: \"Arctic\",\n    correct: false\n  }, {\n    text: \"Africa\",\n    correct: false\n  }]\n}];\nclass QuizApp extends Component {\n  constructor(props) {\n    super(props);\n    this.handleAnswerOptionClick = isCorrect => {\n      this.setState({\n        selectedAnswer: isCorrect\n      });\n      if (isCorrect) {\n        this.setState(prevState => ({\n          score: prevState.score + 1\n        }));\n      }\n    };\n    this.handleNextQuestion = () => {\n      const nextQuestion = this.state.currentQuestionIndex + 1;\n      if (nextQuestion < questions.length) {\n        this.setState({\n          currentQuestionIndex: nextQuestion,\n          selectedAnswer: null\n        });\n      } else {\n        this.setState({\n          showScore: true\n        });\n      }\n    };\n    this.handleRestartQuiz = () => {\n      this.setState({\n        score: 0,\n        currentQuestionIndex: 0,\n        showScore: false,\n        selectedAnswer: null\n      });\n    };\n    this.state = {\n      currentQuestionIndex: 0,\n      score: 0,\n      showScore: false,\n      selectedAnswer: null\n    };\n  }\n  render() {\n    const appStyles = {\n      fontFamily: 'Arial, sans-serif',\n      textAlign: 'center',\n      padding: '20px'\n    };\n    const buttonStyles = {\n      margin: '5px',\n      padding: '10px 20px',\n      borderRadius: '5px',\n      border: 'none',\n      cursor: 'pointer',\n      fontSize: '16px'\n    };\n    const correctButtonStyles = {\n      ...buttonStyles,\n      backgroundColor: '#4CAF50',\n      // Green\n      color: 'white'\n    };\n    const incorrectButtonStyles = {\n      ...buttonStyles,\n      backgroundColor: '#f44336',\n      // Red\n      color: 'white'\n    };\n    const defaultButtonStyles = {\n      ...buttonStyles,\n      backgroundColor: '#008CBA',\n      // Blue\n      color: 'white'\n    };\n    const scoreSectionStyles = {\n      marginTop: '20px'\n    };\n    const nextButtonStyles = {\n      ...buttonStyles,\n      backgroundColor: '#008CBA',\n      color: 'white',\n      display: this.state.selectedAnswer !== null ? 'inline-block' : 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: appStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Simple Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), this.state.showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: scoreSectionStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"You scored \", this.state.score, \" out of \", questions.length, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyles,\n          onClick: this.handleRestartQuiz,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.state.currentQuestionIndex + 1, \". \", questions[this.state.currentQuestionIndex].question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: questions[this.state.currentQuestionIndex].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            style: this.state.selectedAnswer !== null ? answer.correct ? correctButtonStyles : incorrectButtonStyles : defaultButtonStyles,\n            onClick: () => this.handleAnswerOptionClick(answer.correct),\n            disabled: this.state.selectedAnswer !== null,\n            children: answer.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: nextButtonStyles,\n          onClick: this.handleNextQuestion,\n          children: this.state.currentQuestionIndex === questions.length - 1 ? 'Show Score' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default QuizApp;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","questions","question","answers","text","correct","QuizApp","constructor","props","handleAnswerOptionClick","isCorrect","setState","selectedAnswer","prevState","score","handleNextQuestion","nextQuestion","state","currentQuestionIndex","length","showScore","handleRestartQuiz","render","appStyles","fontFamily","textAlign","padding","buttonStyles","margin","borderRadius","border","cursor","fontSize","correctButtonStyles","backgroundColor","color","incorrectButtonStyles","defaultButtonStyles","scoreSectionStyles","marginTop","nextButtonStyles","display","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","answer","index","disabled"],"sources":["C:/Users/admin/Desktop/newrepositary/project1/team23/reactjs/30dropdown/new/src/all projects/QuizApp.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst questions = [\r\n  {\r\n    question: \"Which is the largest animal in the world?\",\r\n    answers: [\r\n      { text: \"Shark\", correct: false },\r\n      { text: \"Blue whale\", correct: true },\r\n      { text: \"Elephant\", correct: false },\r\n      { text: \"Giraffe\", correct: false },\r\n    ],\r\n  },\r\n  {\r\n    question: \"Which is the smallest country in the world?\",\r\n    answers: [\r\n      { text: \"Vatican City\", correct: true },\r\n      { text: \"Bhutan\", correct: false },\r\n      { text: \"Nepal\", correct: false },\r\n      { text: \"Sri Lanka\", correct: false },\r\n    ],\r\n  },\r\n  {\r\n    question: \"Which is the largest desert in the world?\",\r\n    answers: [\r\n      { text: \"Kalahari\", correct: false },\r\n      { text: \"Gobi\", correct: false },\r\n      { text: \"Sahara\", correct: false },\r\n      { text: \"Antarctica\", correct: true },\r\n    ],\r\n  },\r\n  {\r\n    question: \"Which is the smallest continent in the world?\",\r\n    answers: [\r\n      { text: \"Asia\", correct: false },\r\n      { text: \"Australia\", correct: true },\r\n      { text: \"Arctic\", correct: false },\r\n      { text: \"Africa\", correct: false },\r\n    ],\r\n  },\r\n];\r\n\r\nclass QuizApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentQuestionIndex: 0,\r\n      score: 0,\r\n      showScore: false,\r\n      selectedAnswer: null,\r\n    };\r\n  }\r\n\r\n  handleAnswerOptionClick = (isCorrect) => {\r\n    this.setState({ selectedAnswer: isCorrect });\r\n    if (isCorrect) {\r\n      this.setState((prevState) => ({\r\n        score: prevState.score + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleNextQuestion = () => {\r\n    const nextQuestion = this.state.currentQuestionIndex + 1;\r\n    if (nextQuestion < questions.length) {\r\n      this.setState({\r\n        currentQuestionIndex: nextQuestion,\r\n        selectedAnswer: null,\r\n      });\r\n    } else {\r\n      this.setState({ showScore: true });\r\n    }\r\n  };\r\n\r\n  handleRestartQuiz = () => {\r\n    this.setState({\r\n      score: 0,\r\n      currentQuestionIndex: 0,\r\n      showScore: false,\r\n      selectedAnswer: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const appStyles = {\r\n      fontFamily: 'Arial, sans-serif',\r\n      textAlign: 'center',\r\n      padding: '20px',\r\n    };\r\n\r\n    const buttonStyles = {\r\n      margin: '5px',\r\n      padding: '10px 20px',\r\n      borderRadius: '5px',\r\n      border: 'none',\r\n      cursor: 'pointer',\r\n      fontSize: '16px',\r\n    };\r\n\r\n    const correctButtonStyles = {\r\n      ...buttonStyles,\r\n      backgroundColor: '#4CAF50', // Green\r\n      color: 'white',\r\n    };\r\n\r\n    const incorrectButtonStyles = {\r\n      ...buttonStyles,\r\n      backgroundColor: '#f44336', // Red\r\n      color: 'white',\r\n    };\r\n\r\n    const defaultButtonStyles = {\r\n      ...buttonStyles,\r\n      backgroundColor: '#008CBA', // Blue\r\n      color: 'white',\r\n    };\r\n\r\n    const scoreSectionStyles = {\r\n      marginTop: '20px',\r\n    };\r\n\r\n    const nextButtonStyles = {\r\n      ...buttonStyles,\r\n      backgroundColor: '#008CBA',\r\n      color: 'white',\r\n      display: this.state.selectedAnswer !== null ? 'inline-block' : 'none',\r\n    };\r\n\r\n    return (\r\n      <div style={appStyles}>\r\n        <h1>Simple Quiz</h1>\r\n        {this.state.showScore ? (\r\n          <div style={scoreSectionStyles}>\r\n            <h2>You scored {this.state.score} out of {questions.length}!</h2>\r\n            <button style={buttonStyles} onClick={this.handleRestartQuiz}>Play Again</button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2>\r\n              {this.state.currentQuestionIndex + 1}. {questions[this.state.currentQuestionIndex].question}\r\n            </h2>\r\n            <div>\r\n              {questions[this.state.currentQuestionIndex].answers.map((answer, index) => (\r\n                <button\r\n                  key={index}\r\n                  style={\r\n                    this.state.selectedAnswer !== null\r\n                      ? answer.correct\r\n                        ? correctButtonStyles\r\n                        : incorrectButtonStyles\r\n                      : defaultButtonStyles\r\n                  }\r\n                  onClick={() => this.handleAnswerOptionClick(answer.correct)}\r\n                  disabled={this.state.selectedAnswer !== null}\r\n                >\r\n                  {answer.text}\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <button\r\n              style={nextButtonStyles}\r\n              onClick={this.handleNextQuestion}\r\n            >\r\n              {this.state.currentQuestionIndex === questions.length - 1 ? 'Show Score' : 'Next'}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}