{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\newrepositary\\\\project1\\\\team23\\\\reactjs\\\\30dropdown\\\\new\\\\src\\\\all projects\\\\Texttospeech.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TextToSpeech extends Component {\n  constructor(props) {\n    super(props);\n    this.handleVoiceChange = event => {\n      const selectedVoice = this.state.voices[event.target.value];\n      this.setState({\n        selectedVoice: selectedVoice\n      });\n    };\n    this.handleTextChange = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n    this.handleSpeak = () => {\n      const {\n        text,\n        selectedVoice\n      } = this.state;\n      let speech = new SpeechSynthesisUtterance();\n      speech.text = text;\n      speech.voice = selectedVoice;\n      window.speechSynthesis.speak(speech);\n    };\n    this.state = {\n      voices: [],\n      selectedVoice: null,\n      text: ''\n    };\n  }\n  componentDidMount() {\n    window.speechSynthesis.onvoiceschanged = () => {\n      const voices = window.speechSynthesis.getVoices();\n      this.setState({\n        voices: voices,\n        selectedVoice: voices[0] // Default to the first voice\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.header,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: 'red',\n            textAlign: 'center',\n            textDecoration: 'underline'\n          },\n          children: \"21. Text To Speech Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"textarea\",\n          style: styles.textarea,\n          value: this.state.text,\n          onChange: this.handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'rgb(66, 30, 210)'\n          },\n          children: \"Select voice to listen:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          style: styles.select,\n          onChange: this.handleVoiceChange,\n          children: this.state.voices.map((voice, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: voice.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.button,\n            onClick: this.handleSpeak,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Listen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst styles = {\n  main: {\n    marginLeft: '250px',\n    marginTop: '50px',\n    padding: '20px'\n  },\n  textarea: {\n    width: '700px',\n    height: '300px',\n    borderRadius: '10px',\n    border: '2px solid black'\n  },\n  select: {\n    width: '500px',\n    height: '40px',\n    border: '2px solid black',\n    borderRadius: '20px',\n    color: 'black'\n  },\n  button: {\n    width: '100px',\n    borderRadius: '10px',\n    backgroundColor: 'rgb(238, 139, 39)',\n    height: '40px',\n    marginLeft: '50px'\n  },\n  header: {\n    marginRight: '20px',\n    textAlign: 'center'\n  }\n};\nexport default TextToSpeech;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","TextToSpeech","constructor","props","handleVoiceChange","event","selectedVoice","state","voices","target","value","setState","handleTextChange","text","handleSpeak","speech","SpeechSynthesisUtterance","voice","window","speechSynthesis","speak","componentDidMount","onvoiceschanged","getVoices","render","style","styles","main","children","header","color","textAlign","textDecoration","fileName","_jsxFileName","lineNumber","columnNumber","id","textarea","onChange","select","map","index","name","button","onClick","marginLeft","marginTop","padding","width","height","borderRadius","border","backgroundColor","marginRight"],"sources":["C:/Users/admin/Desktop/newrepositary/project1/team23/reactjs/30dropdown/new/src/all projects/Texttospeech.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TextToSpeech extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      voices: [],\r\n      selectedVoice: null,\r\n      text: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.speechSynthesis.onvoiceschanged = () => {\r\n      const voices = window.speechSynthesis.getVoices();\r\n      this.setState({\r\n        voices: voices,\r\n        selectedVoice: voices[0] // Default to the first voice\r\n      });\r\n    };\r\n  }\r\n\r\n  handleVoiceChange = (event) => {\r\n    const selectedVoice = this.state.voices[event.target.value];\r\n    this.setState({ selectedVoice: selectedVoice });\r\n  };\r\n\r\n  handleTextChange = (event) => {\r\n    this.setState({ text: event.target.value });\r\n  };\r\n\r\n  handleSpeak = () => {\r\n    const { text, selectedVoice } = this.state;\r\n    let speech = new SpeechSynthesisUtterance();\r\n    speech.text = text;\r\n    speech.voice = selectedVoice;\r\n    window.speechSynthesis.speak(speech);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.main}>\r\n        <div style={styles.header}>\r\n          <h2 style={{ color: 'red', textAlign: 'center', textDecoration: 'underline' }}>\r\n            21. Text To Speech Converter\r\n          </h2>\r\n        </div>\r\n        <div>\r\n          <textarea\r\n            id=\"textarea\"\r\n            style={styles.textarea}\r\n            value={this.state.text}\r\n            onChange={this.handleTextChange}\r\n          ></textarea>\r\n        </div>\r\n        <div>\r\n          <h3 style={{ color: 'rgb(66, 30, 210)' }}>Select voice to listen:</h3>\r\n          <select style={styles.select} onChange={this.handleVoiceChange}>\r\n            {this.state.voices.map((voice, index) => (\r\n              <option key={index} value={index}>\r\n                {voice.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <span>\r\n            <button style={styles.button} onClick={this.handleSpeak}>\r\n              <h3>Listen</h3>\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  main: {\r\n    marginLeft: '250px',\r\n    marginTop: '50px',\r\n    padding: '20px'\r\n  },\r\n  textarea: {\r\n    width: '700px',\r\n    height: '300px',\r\n    borderRadius: '10px',\r\n    border: '2px solid black'\r\n  },\r\n  select: {\r\n    width: '500px',\r\n    height: '40px',\r\n    border: '2px solid black',\r\n    borderRadius: '20px',\r\n    color: 'black'\r\n  },\r\n  button: {\r\n    width: '100px',\r\n    borderRadius: '10px',\r\n    backgroundColor: 'rgb(238, 139, 39)',\r\n    height: '40px',\r\n    marginLeft: '50px'\r\n  },\r\n  header: {\r\n    marginRight: '20px',\r\n    textAlign: 'center'\r\n  }\r\n};\r\n\r\nexport default TextToSpeech;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}